on:
  push:
  schedule:
    - cron: '0 0 * * 0'
    
jobs:
  build_systemd:
    strategy: 
      matrix:
        release_name: ['ubuntu_noble', 'ubuntu_jammy', 'debian_bookworm', 'debian_trixie', 'debian_unstable']
        runner: [ubuntu-24.04, ubuntu-24.04-arm]
        exclude:
          - release_name: debian_unstable
            runner: ubuntu-24.04-arm

    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y debootstrap binfmt-support pcregrep
    
      - name: Build
        run: | 
          distro="$(echo ${{ matrix.release_name }} | cut -d'_' -f1)"
          release="$(echo ${{ matrix.release_name }} | cut -d'_' -f2)"
          [ "$(uname -m)" = "x86_64" ] && arch="amd64" || arch="arm64"
          sudo DEBUG=1 ./build_systemd.sh $distro $release $arch
          mkdir -p out/${release}_${arch}
          cp build/*.deb out/${release}_${arch}
      
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: systemd_${{ matrix.release_name }}_${{ matrix.runner }}
          path: out
  
  build_mesa:
    strategy: 
      matrix:
        runner: [ubuntu-24.04, ubuntu-24.04-arm]

    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: | 
          sudo apt-get install -y debootstrap binfmt-support

      - name: Build
        run: | 
          [ "$(uname -m)" = "x86_64" ] && arch="amd64" || arch="arm64"
          sudo ./build_mesa.sh debian bookworm $arch
          mkdir -p out/noble_$arch
          mkdir -p out/jammy_$arch
          mkdir -p out/bookworm_$arch
          mkdir -p out/trixie_$arch
          mkdir -p out/unstable_$arch
          cp build/*.deb out/noble_$arch
          cp build/*.deb out/jammy_$arch
          cp build/*.deb out/bookworm_$arch
          cp build/*.deb out/trixie_$arch
          cp build/*.deb out/unstable_$arch
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mesa_generic_${{ matrix.runner }}
          path: out
  
  publish:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      deployments: write
    needs: [build_systemd, build_mesa]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get install -y dpkg-dev

      - name: Setup directories 
        run: |
          mkdir -p repo
          mkdir -p download

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: download
          merge-multiple: true

      - name: Build repo
        run: |
          DEBUG=1 ./build_repo.sh
          mkdir -p website
          mv repo/ website/debian/
          ./generate_index.sh
      
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: b8079ffa92c97010f2a8d759e24cc782
          projectName: shimboot
          directory: website

  workflow-keepalive:
    if: github.event_name == 'schedule'
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - uses: liskin/gh-workflow-keepalive@v1