on:
  push:
  schedule:
    - cron: '0 0 * * 0'

jobs:
  build_systemd:
    strategy: 
      matrix:
        release_name: [bookworm, unstable]
        arch: [amd64, arm64]

    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get install -y debootstrap binfmt-support qemu-user-static
    
      - name: Build
        run: | 
          sudo DEBUG=1 ./build_systemd.sh debian ${{ matrix.release_name }} ${{ matrix.arch }}
          mkdir -p out/${{ matrix.release_name }}_${{ matrix.arch }}
          cp build/*.deb out/${{ matrix.release_name }}_${{ matrix.arch }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: systemd_${{ matrix.release_name }}_${{ matrix.arch }}
          path: out
  
  build_mesa:
    strategy: 
      matrix:
        arch: [amd64, arm64]

    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: | 
          sudo apt-get install -y debootstrap binfmt-support qemu-user-static

      - name: Build
        run: | 
          sudo ./build_mesa.sh debian bookworm ${{ matrix.arch }}
          mkdir -p out/bookworm_${{ matrix.arch }}
          mkdir -p out/unstable_${{ matrix.arch }}
          cp build/*.deb out/bookworm_${{ matrix.arch }}
          cp build/*.deb out/unstable_${{ matrix.arch }}
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mesa_generic_${{ matrix.arch }}
          path: out
  
  publish:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      deployments: write
    needs: [build_systemd, build_mesa]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get install -y dpkg-dev

      - name: Setup directories 
        run: |
          mkdir -p repo
          mkdir -p download

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: download
          merge-multiple: true

      - name: Build repo
        run: |
          ./build_repo.sh
          mkdir -p website
          mv repo/ website/debian/
          ./generate_index.sh
      
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: b8079ffa92c97010f2a8d759e24cc782
          projectName: shimboot
          directory: website